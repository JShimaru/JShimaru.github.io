//Use API's function to load random 25 word arrays per call

//Global Game Containers
const words = [];
const backupWords = [];
let position = 0;
const submittedWords = [];
const correctWords = [];
let correctWordsGoal = 5;
let level = 0;
let finalGoal = 2;
let piecePlace = 1;
let progress = 1;
//Story Mode changes to Storymode image and loads game screen
//VS Mode changes to VS Screen image and ask for name input
//Challenge Mode changes to Storymode image and ask for catalog choice


//Code for button click here
function buttonClick(){
let versus = document.getElementById(#vs)
let challenge = document.getElementById(#challenge)
let easy = document.getElementById(#easy).value;
let med = document.getElementById(#med).value;
let hard = document.getElementById(#hard).value;
if(versus.checked == true && easy){
    alert(`Starting Quick Play! First to 10!`)
    //change page to VS background
}else if(versus.checked == true && med){
    alert(`Starting Head to head! First to 25 words!`)
    //change page to VS background
}else if(versus.checked == true && hard){
    alert(`Starting First to Fall! Keep going until no hearts remain!`)
    //change page to VS background
}else if(challenge.checked == true){
    //change page to story mode page
    alert(`Challenge Mode! Choose your library:`)
    //Drop down list of Special API's
}else{
    alert(`Beginning Ascension...`)
    //Change page to story mode page
}
}
//end code for button clicks


//Timer and Hearts
const storyTimer = setTimeout(() => {
alert(`Time's Up! Try again?`)
//load dark cavern background
//option to retry or quit
}, 30000);
const challengeTimer = setTimeout(() => {
alert(`Time's Up! Check the score -`)
//print correctWords.length
//load global high score and personal high score
}, 6000);
let heart = 3;

//Check Word Function to be called by all Update functions
function CheckWord(input){
    //pause timer
    userWord = input;
    currentWord = words[position]

    if(userWord.toLowerCase() == currentWord.toLowerCase()){
        correctWords.push(userWord)
        position++
        //Print words[position] to screen position
    }else{
        submittedWords.push(userWord)
        heart--
        position++
        
        //Print words[position] to screen position
    }
    //resume timer
}
//End CheckWord || Begin Move Piece function
function MovePiece(){
    //pause timer
    let progressBar = correctWordsGoal/10;
    let distance = progressBar*10;

    if(distance < 10 && correctWords.length <= 5){
        piecePlace+2
        progress+2
        //move piece image up two nodes
        //switch to even progress bar image
    }else if(distance = 10 && correctWords.length >= 2 && correctWords.length < distance && piecePlace != 10 && progress != 10){
        piecePlace++
        progress++
        //move piece image to next node
        //switch to next progress bar image
    }else if(distance > 10 && correctWords.length >= progressBar*progress && progress != 10){
        piecePlace++
        progress++
        //next progress bar image placed
    }
    //resume timer
}
//End Move Piece || More Words Function

function MoreWords(){
    if(words.length == position){
        words = backupWords;
        //backupWords = API call for 25 more words
        position = 0;
    }
}

//Story Mode Update function when player submits word
function StoryModeUpdate(submittedWord){
    //pause timer
    let word = submittedWord;
    CheckWord(word);
    
        if(heart == 0 && correctWords.length != correctWordsGoal){
            alert(`careful! No more misses or it's over!`)
        }else if(correctWords.length == correctWordsGoal){
            if(level != finalGoal){
                level++
                alert(`Destination set, onward?`)
                //option to continue, retry, or quit
            }else if(level == finalGoal){
                alert(`Goal achieved! You WIN!`)
                //option to continue, retry, or quit
            }
        }else if(heart < 0){
            //load dark carvern background
            alert(`Defeat! Game Over?`)
            //Option to retry or quit
        }
    //resume timer
}
//End of Story Mode Update Function




/*//Tk Phoenix Psuedo Code for Mechanics



Story Mode:
//Word appears in upper oft-left corner randomly generated by API
//Timer in upper right corner starts counting down from 300 seconds after first 
word submitted (5 minutes)
//Heart[1-3] next to the timer display
//Text box in lower mid-right waits for user to submit words
//if submitted word is exact letter match move piece toward goal 
//If Timer hits 0, auto-submit word. If piece did not reach goal, Game Over 
//If piece reaches goal, You Win! 
//If Game Over or You Win, offer continue, retry, or quit

VS Mode:
//Word, Timer, Heart[1] and Text box all in same location
//Request player input for name
//Take first letter of player input and generate a piece
//If player submits five words in a row correctly; add 1 Heart
//If player's correct words array is 3 ahead; opponent -1 Heart
//Win condition changed to who reaches goal first, if timer hits 0 before
either player reaches goal whoever correctly completed most words wins. If words 
are equal whoever has the most heart wins. If heart is equal whoever 
submitted the least words wins.

Challenge Mode:
//Word, Timer[60], Heart[1] and text box all in same location.
//Word called from specific API based on player selection
//Every 10 correctly submitted words w/o mistakes add 10 seconds to timer

 */